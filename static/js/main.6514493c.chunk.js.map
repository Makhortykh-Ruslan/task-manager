{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","updateSearch","type","placeholder","onChange","event","target","value","PostStatusFilter","onclicklikedAll","status","Button","color","onClick","PostListItem","label","important","like","onDeleted","onToggleImportant","onToggleLiked","classNameActive","PostList","posts","elements","map","item","id","itemProps","uuidv4","PostAddForm","addNewElements","useState","text","inputState","setInputState","onSubmit","preventDefault","App","data","stateData","setStateData","click","setClick","filteredData","filter","indexOf","filteredLikeData","allPostData","length","index","findIndex","elem","slice","old","newItem","newItems","Math","floor","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6514493c.chunk.js","sourcesContent":["import AppHeader from './app-header'\nexport default AppHeader","import React from 'react';\nimport './app-header.css'\n\nconst AppHeader = ({liked, allPosts}) =>{\n    return(\n        <div className='app-header d-flex'>\n            <h1>Task Manager</h1>\n            <h2> {allPosts} all posts, like to {liked}</h2>\n        </div>\n    )\n}\n\nexport default AppHeader","import SearchPanel from './search-panel'\nexport default SearchPanel","import React from 'react';\nimport './search-panel.css'\n\nconst SearchPanel = ({updateSearch}) =>{\n\n    return(\n        <input\n            type=\"text\"\n            className='from-control search-input'\n            placeholder='Search by seconds '\n            onChange={(event) => updateSearch(event.target.value)}\n\n        />\n    )\n}\n\nexport default SearchPanel","import PostStatusFilter from './post-status-filter';\nexport default PostStatusFilter\n","import React from 'react';\nimport {Button} from 'reactstrap';\nimport './post-status-filter.css'\n\nconst PostStatusFilter = ({onclicklikedAll, status}) => {\n\n\n    return(\n        <div className='btn-group'>\n            <Button color={status ? \"danger\" : \"primary\"} onClick={onclicklikedAll}>Liked</Button>\n        </div>\n    )\n}\nexport default PostStatusFilter","import PostListItem from './post-list-item';\nexport default PostListItem","import React from 'react';\nimport './post-list-item.css'\n\n\nconst PostListItem = ({label, important, like,  onDeleted, onToggleImportant, onToggleLiked}) =>{\n\n    let classNameActive = 'app-list-item d-flex justify-content-between';\n    if(important){\n        classNameActive += ' important';\n    }\n\n    if(like){\n        classNameActive += ' like';\n    }\n\n\n    return(\n        <div className={classNameActive}>\n            <span onClick={onToggleLiked} className='app-list-item-label'>\n                {label}\n            </span>\n            <div className='d-flex justify-content-center align-items-center'>\n                <button onClick={onToggleImportant} type='button' className='btn-star btn-sm'>\n                    <i className='fa fa-star'></i>\n                </button>\n                <button onClick={onDeleted} type='button' className='btn-trash btn-sm'>\n                    <i className='fa fa-trash-o'></i>\n                </button>\n                <i className='fa fa-heart'></i>\n            </div>\n        </div>\n    )\n}\nexport default PostListItem\n","import React from 'react';\nimport PostListItem from '../post-list-item'\nimport './post-list.css'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst PostList = ({posts, onDeleted, onToggleImportant, onToggleLiked}) => {\n\n\n    const elements =  posts.map((item) => {\n        const {id, ...itemProps} = item;\n        return (\n            <li  key={uuidv4()} className='list-group-item'>\n                <PostListItem\n                    {...itemProps}\n                    onDeleted={() => onDeleted(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleLiked={() => onToggleLiked(id)}/>\n            </li>\n        )\n    });\n\n    return (\n        <ul className=\"app-list list-group\">{elements}</ul>\n    )\n}\n\nexport default PostList;","import PostAddForm from './post-add-form';\nexport default PostAddForm","import React, {useState} from 'react';\nimport './post-add-form.css'\n\nconst PostAddForm = ({addNewElements}) =>{\n    const [inputState, setInputState] = useState({\n        text: ''\n    });\n\n    const onChange = (event) =>{\n        setInputState({text: event.target.value})\n    }\n\n    const onSubmit = (event) =>{\n        event.preventDefault()\n        addNewElements(inputState.text)\n        setInputState({text: ''})\n    }\n\n    return(\n        <form className='bottom-panel d-flex' onSubmit={onSubmit} >\n            <input\n                onChange={onChange}\n                type=\"text\"\n                placeholder='What are you thinking about now?'\n                className='form-control new-post-label'\n                value={inputState.text}\n            />\n\n                <button\n                     type='submit'\n                     className='btn btn-outline-secondary'\n                 >Add</button>\n\n        </form>\n\n    )\n}\nexport default PostAddForm\n","import App from './app';\nexport default App;","import React, {useState} from 'react';\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport PostList from \"../post-list/post-list\";\nimport PostAddForm from \"../post-add-form\";\nimport './app.css'\n\n\n\nconst App = () =>{\n    const [stateData, setStateData] = useState({\n        data: [{label: 'Your list is still empty ))) You can like and mark completed tasks with an asterisk'}],\n        text: ''\n    })\n    const [click, setClick] = useState(false)\n    const onDeleted = (id) =>{\n        setStateData(({data})=>{\n            const index = data.findIndex((elem) => elem.id === id);\n            const newArr = [...data.slice(0,index), ...data.slice(index +1)];\n            return{\n                data: newArr, text: ''\n            }\n        })\n    };\n\n    const onAddItem = (data) =>{\n        const newItems = {\n            label: data,\n            important: false,\n            id: Math.floor(Math.random() * 1000),\n        }\n\n        setStateData(({data, text})=>{\n            const newData = [...data, newItems];\n            return{\n                data: newData, text: ''\n            }\n        })\n    }\n    const onToggleImportant = (id) =>{\n        setStateData(({data}) =>{\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = {...old, important: !old.important};\n            const newArr = [...data.slice(0,index), newItem, ...data.slice(index +1)];\n            return{\n                \"data\": newArr, text: ''\n            }\n        })\n    }\n\n    const onToggleLiked = (id) =>{\n        setStateData(({data}) =>{\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = {...old, like: !old.like};\n            const newArr = [...data.slice(0,index), newItem, ...data.slice(index +1)];\n            return{\n                data: newArr, text: ''\n            }\n        })\n    }\n\n\n    const filteredData = stateData.data.filter(item => item.label.indexOf(stateData.text) !== -1);\n    const filteredLikeData = filteredData.filter(item => item.like === true);\n    const allPostData = click ? (filteredLikeData.length === 0 ? filteredData : filteredLikeData) : filteredData\n\n    const onUpdateSearch = (filter) =>{\n        setStateData({...stateData, text: filter})\n    }\n\n\n\n\n    const {data} = stateData;\n    const liked = data.filter(item => item.like).length;\n    const allPosts = data.length;\n    return(\n        <div className='app'>\n            <AppHeader liked={liked} allPosts={allPosts}/>\n            <div className='search-panel d-flex'>\n                <SearchPanel updateSearch={onUpdateSearch} />\n                <PostStatusFilter status={click} onclicklikedAll={() => setClick(!click)} />\n            </div>\n            <PostList  onDeleted={onDeleted}\n                      posts={allPostData}\n                          onToggleImportant={onToggleImportant}\n                          onToggleLiked={onToggleLiked} />\n\n                          <PostAddForm addNewElements={onAddItem} />\n        </div>\n\n    )\n};\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}