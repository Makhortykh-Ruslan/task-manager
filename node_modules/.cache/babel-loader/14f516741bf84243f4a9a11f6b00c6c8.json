{"ast":null,"code":"var _jsxFileName = \"/Users/makhortykhruslan/Desktop/Front-end/task-manager/src/components/app/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport PostList from \"../post-list/post-list\";\nimport PostAddForm from \"../post-add-form\";\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [stateData, setStateData] = useState({\n    data: [{\n      label: 'Your list is still empty ))) You can like and mark completed tasks with an asterisk'\n    }],\n    text: ''\n  });\n  const [click, setClick] = useState(false);\n\n  const onDeleted = id => {\n    setStateData(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n      return {\n        data: newArr,\n        text: ''\n      };\n    });\n  };\n\n  const onAddItem = data => {\n    const newItems = {\n      label: data,\n      important: false,\n      id: Math.floor(Math.random() * 1000)\n    };\n    setStateData(({\n      data,\n      text\n    }) => {\n      const newData = [...data, newItems];\n      return {\n        data: newData,\n        text: ''\n      };\n    });\n  };\n\n  const onToggleImportant = id => {\n    setStateData(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        important: !old.important\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        \"data\": newArr,\n        text: ''\n      };\n    });\n  };\n\n  const onToggleLiked = id => {\n    setStateData(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        like: !old.like\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr,\n        text: ''\n      };\n    });\n  };\n\n  const filteredData = stateData.data.filter(item => item.label.indexOf(stateData.text) !== -1);\n  const filteredLikeData = filteredData.filter(item => item.like === true);\n  const allPostData = click ? filteredLikeData.length === 0 ? filteredData : filteredLikeData : filteredData;\n\n  const onUpdateSearch = filter => {\n    setStateData({ ...stateData,\n      text: filter\n    });\n  };\n\n  const {\n    data\n  } = stateData;\n  const liked = data.filter(item => item.like).length;\n  const allPosts = data.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n      liked: liked,\n      allPosts: allPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-panel d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n        updateSearch: onUpdateSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostStatusFilter, {\n        status: click,\n        onclicklikedAll: () => setClick(!click)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      onDeleted: onDeleted,\n      posts: allPostData,\n      onToggleImportant: onToggleImportant,\n      onToggleLiked: onToggleLiked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostAddForm, {\n      addNewElements: onAddItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"GtqowqpnmorEVI7FhTDZSFRaCzM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/makhortykhruslan/Desktop/Front-end/task-manager/src/components/app/app.js"],"names":["React","useState","AppHeader","SearchPanel","PostStatusFilter","PostList","PostAddForm","App","stateData","setStateData","data","label","text","click","setClick","onDeleted","id","index","findIndex","elem","newArr","slice","onAddItem","newItems","important","Math","floor","random","newData","onToggleImportant","old","newItem","onToggleLiked","like","filteredData","filter","item","indexOf","filteredLikeData","allPostData","length","onUpdateSearch","liked","allPosts"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport PostList from \"../post-list/post-list\";\nimport PostAddForm from \"../post-add-form\";\nimport './app.css'\n\n\n\nconst App = () =>{\n    const [stateData, setStateData] = useState({\n        data: [{label: 'Your list is still empty ))) You can like and mark completed tasks with an asterisk'}],\n        text: ''\n    })\n    const [click, setClick] = useState(false)\n    const onDeleted = (id) =>{\n        setStateData(({data})=>{\n            const index = data.findIndex((elem) => elem.id === id);\n            const newArr = [...data.slice(0,index), ...data.slice(index +1)];\n            return{\n                data: newArr, text: ''\n            }\n        })\n    };\n\n    const onAddItem = (data) =>{\n        const newItems = {\n            label: data,\n            important: false,\n            id: Math.floor(Math.random() * 1000),\n        }\n\n        setStateData(({data, text})=>{\n            const newData = [...data, newItems];\n            return{\n                data: newData, text: ''\n            }\n        })\n    }\n    const onToggleImportant = (id) =>{\n        setStateData(({data}) =>{\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = {...old, important: !old.important};\n            const newArr = [...data.slice(0,index), newItem, ...data.slice(index +1)];\n            return{\n                \"data\": newArr, text: ''\n            }\n        })\n    }\n\n    const onToggleLiked = (id) =>{\n        setStateData(({data}) =>{\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = {...old, like: !old.like};\n            const newArr = [...data.slice(0,index), newItem, ...data.slice(index +1)];\n            return{\n                data: newArr, text: ''\n            }\n        })\n    }\n\n\n    const filteredData = stateData.data.filter(item => item.label.indexOf(stateData.text) !== -1);\n    const filteredLikeData = filteredData.filter(item => item.like === true);\n    const allPostData = click ? (filteredLikeData.length === 0 ? filteredData : filteredLikeData) : filteredData\n\n    const onUpdateSearch = (filter) =>{\n        setStateData({...stateData, text: filter})\n    }\n\n\n\n\n    const {data} = stateData;\n    const liked = data.filter(item => item.like).length;\n    const allPosts = data.length;\n    return(\n        <div className='app'>\n            <AppHeader liked={liked} allPosts={allPosts}/>\n            <div className='search-panel d-flex'>\n                <SearchPanel updateSearch={onUpdateSearch} />\n                <PostStatusFilter status={click} onclicklikedAll={() => setClick(!click)} />\n            </div>\n            <PostList  onDeleted={onDeleted}\n                      posts={allPostData}\n                          onToggleImportant={onToggleImportant}\n                          onToggleLiked={onToggleLiked} />\n\n                          <PostAddForm addNewElements={onAddItem} />\n        </div>\n\n    )\n};\n\nexport default App"]},"metadata":{},"sourceType":"module"}