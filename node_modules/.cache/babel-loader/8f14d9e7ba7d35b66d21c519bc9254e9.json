{"ast":null,"code":"var _jsxFileName = \"/Users/makhortykhruslan/Desktop/task-manager/src/components/app/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport PostList from \"../post-list/post-list\";\nimport PostAddForm from \"../post-add-form\";\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [stateData, setStateData] = useState({\n    data: [],\n    term: ''\n  });\n\n  const onDeleted = id => {\n    setStateData(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  };\n\n  const onAddItem = data => {\n    const newItems = {\n      label: data,\n      important: false,\n      id: Math.floor(Math.random() * 1000)\n    };\n    setStateData(({\n      data\n    }) => {\n      const newData = [...data, newItems];\n      return {\n        data: newData\n      };\n    });\n  };\n\n  const onToggleImportant = id => {\n    setStateData(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        important: !old.important\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        \"data\": newArr\n      };\n    });\n  };\n\n  const onToggleLiked = id => {\n    setStateData(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        like: !old.like\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  };\n\n  const searchPost = (items, term) => {\n    if (term.length <= 0) {\n      return items;\n    }\n\n    return items.filter(element => {\n      return element.last.indexOf(term) > -1;\n    });\n  };\n\n  const onUpdateSearchProps = term => {\n    setStateData({\n      term\n    });\n  };\n\n  const {\n    data,\n    term\n  } = stateData;\n  const liked = data.filter(item => item.like).length;\n  const allPosts = data.length;\n  const visiblePosts = searchPost(data, term);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n      liked: liked,\n      allPosts: allPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-panel d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n        onUpdateSearchProps: onUpdateSearchProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostStatusFilter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      onDeleted: onDeleted,\n      posts: visiblePosts,\n      onToggleImportant: onToggleImportant,\n      onToggleLiked: onToggleLiked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostAddForm, {\n      addNewElements: onAddItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"WqUbgy/nnkO1vYf5mXR+alZf7yA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/makhortykhruslan/Desktop/task-manager/src/components/app/app.js"],"names":["React","useState","AppHeader","SearchPanel","PostStatusFilter","PostList","PostAddForm","App","stateData","setStateData","data","term","onDeleted","id","index","findIndex","elem","newArr","slice","onAddItem","newItems","label","important","Math","floor","random","newData","onToggleImportant","old","newItem","onToggleLiked","like","searchPost","items","length","filter","element","last","indexOf","onUpdateSearchProps","liked","item","allPosts","visiblePosts"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport PostList from \"../post-list/post-list\";\nimport PostAddForm from \"../post-add-form\";\nimport './app.css'\n\n\nconst App = () =>{\n    const [stateData, setStateData] = useState({\n        data: [],\n        term: ''\n    })\n\n    const onDeleted = (id) =>{\n        setStateData(({data})=>{\n            const index = data.findIndex((elem) => elem.id === id);\n            const newArr = [...data.slice(0,index), ...data.slice(index +1)];\n            return{\n                data: newArr\n            }\n        })\n    };\n\n    const onAddItem = (data) =>{\n        const newItems = {\n            label: data,\n            important: false,\n            id: Math.floor(Math.random() * 1000)\n        }\n        setStateData(({data})=>{\n            const newData = [...data, newItems];\n            return{\n                data: newData\n            }\n        })\n    }\n    const onToggleImportant = (id) =>{\n        setStateData(({data}) =>{\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = {...old, important: !old.important};\n            const newArr = [...data.slice(0,index), newItem, ...data.slice(index +1)];\n            return{\n                \"data\": newArr\n            }\n        })\n    }\n\n    const onToggleLiked = (id) =>{\n        setStateData(({data}) =>{\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = {...old, like: !old.like};\n            const newArr = [...data.slice(0,index), newItem, ...data.slice(index +1)];\n            return{\n                data: newArr\n            }\n        })\n    }\n    const searchPost = (items, term) =>{\n        if(term.length <= 0){\n            return items\n        }\n        return items.filter((element) => {\n            return element.last.indexOf(term) > -1\n        })\n    }\n    const onUpdateSearchProps = (term) =>{\n        setStateData({term})\n    }\n\n    const {data, term} = stateData;\n    const liked = data.filter(item => item.like).length;\n    const allPosts = data.length;\n    const visiblePosts = searchPost(data, term);\n\n\n    return(\n        <div className='app'>\n            <AppHeader liked={liked} allPosts={allPosts}/>\n            <div className='search-panel d-flex'>\n                <SearchPanel onUpdateSearchProps={onUpdateSearchProps} />\n                <PostStatusFilter />\n            </div>\n\n            <PostList onDeleted={onDeleted}\n                          posts={visiblePosts}\n                          onToggleImportant={onToggleImportant}\n                          onToggleLiked={onToggleLiked} />\n\n                          <PostAddForm addNewElements={onAddItem} />\n        </div>\n\n    )\n};\n\nexport default App"]},"metadata":{},"sourceType":"module"}