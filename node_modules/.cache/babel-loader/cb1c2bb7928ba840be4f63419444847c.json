{"ast":null,"code":"var _jsxFileName = \"/Users/makhortykhruslan/Desktop/task-manager/src/components/app/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport PostList from \"../post-list/post-list\";\nimport PostAddForm from \"../post-add-form\";\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [stateData, setStateData] = useState({\n    data: [],\n    term: ''\n  });\n\n  const onDeleted = id => {\n    console.log('csdcsdc');\n    setStateData(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  };\n\n  const onAddItem = data => {\n    const newItems = {\n      label: data,\n      important: false,\n      id: Math.floor(Math.random() * 1000)\n    };\n    setStateData(({\n      data\n    }) => {\n      const newData = [...data, newItems];\n      return {\n        data: newData\n      };\n    });\n  };\n\n  const onToggleImportant = id => {\n    setStateData(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        important: !old.important\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        \"data\": newArr\n      };\n    });\n  };\n\n  const onToggleLiked = id => {\n    setStateData(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        like: !old.like\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }; // const searchPost = (items, term) => {\n  //      if (term && term.length === 0)  {\n  //         return items\n  //     }\n  //\n  //     return items.filter((item) => {\n  //         return item.label.indexOf(term) > -1\n  //     });\n  //\n  //  }\n  // const onUpdateSearch = (term) =>{\n  //      setStateData({term})\n  //  }\n\n\n  const {\n    data\n  } = stateData; // const visiblePosts = searchPost(stateData.data, stateData.term);\n\n  const liked = data.filter(item => item.like).length;\n  const allPosts = data.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n      liked: liked,\n      allPosts: allPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-panel d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(SearchPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostStatusFilter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      onDeleted: onDeleted,\n      posts: data,\n      onToggleImportant: onToggleImportant,\n      onToggleLiked: onToggleLiked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostAddForm, {\n      addNewElements: onAddItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"tT10NQQtKc4GXnRHUCt/PU9NZdc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/makhortykhruslan/Desktop/task-manager/src/components/app/app.js"],"names":["React","useState","AppHeader","SearchPanel","PostStatusFilter","PostList","PostAddForm","App","stateData","setStateData","data","term","onDeleted","id","console","log","index","findIndex","elem","newArr","slice","onAddItem","newItems","label","important","Math","floor","random","newData","onToggleImportant","old","newItem","onToggleLiked","like","liked","filter","item","length","allPosts"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport PostList from \"../post-list/post-list\";\nimport PostAddForm from \"../post-add-form\";\nimport './app.css'\n\n\nconst App = () =>{\n    const [stateData, setStateData] = useState({\n        data: [\n\n            ],\n        term: ''\n    })\n\n\n    const onDeleted = (id) =>{\n        console.log('csdcsdc')\n        setStateData(({data})=>{\n            const index = data.findIndex((elem) => elem.id === id);\n            const newArr = [...data.slice(0,index), ...data.slice(index +1)];\n            return{\n                data: newArr\n            }\n        })\n    };\n\n    const onAddItem = (data) =>{\n        const newItems = {\n            label: data,\n            important: false,\n            id: Math.floor(Math.random() * 1000),\n\n        }\n        setStateData(({data})=>{\n            const newData = [...data, newItems];\n            return{\n                data: newData\n            }\n        })\n    }\n    const onToggleImportant = (id) =>{\n        setStateData(({data}) =>{\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = {...old, important: !old.important};\n            const newArr = [...data.slice(0,index), newItem, ...data.slice(index +1)];\n            return{\n                \"data\": newArr\n            }\n        })\n    }\n\n    const onToggleLiked = (id) =>{\n        setStateData(({data}) =>{\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = {...old, like: !old.like};\n            const newArr = [...data.slice(0,index), newItem, ...data.slice(index +1)];\n            return{\n                data: newArr\n            }\n        })\n    }\n   // const searchPost = (items, term) => {\n   //      if (term && term.length === 0)  {\n   //         return items\n   //     }\n   //\n   //     return items.filter((item) => {\n   //         return item.label.indexOf(term) > -1\n   //     });\n   //\n   //  }\n\n   // const onUpdateSearch = (term) =>{\n   //      setStateData({term})\n   //  }\n\n    const {data} = stateData;\n    // const visiblePosts = searchPost(stateData.data, stateData.term);\n    const liked = data.filter(item => item.like).length;\n    const allPosts = data.length;\n\n    return(\n        <div className='app'>\n            <AppHeader liked={liked} allPosts={allPosts}/>\n            <div className='search-panel d-flex'>\n                <SearchPanel  />\n                <PostStatusFilter />\n            </div>\n\n            <PostList onDeleted={onDeleted}\n                      posts={data}\n                          onToggleImportant={onToggleImportant}\n                          onToggleLiked={onToggleLiked} />\n\n                          <PostAddForm addNewElements={onAddItem} />\n        </div>\n\n    )\n};\n\nexport default App"]},"metadata":{},"sourceType":"module"}